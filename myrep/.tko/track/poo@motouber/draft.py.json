{
    "patches": [
        {
            "label": "2025-10-25_16-31-01",
            "content": "@@ -761,17 +761,17 @@\n %7Bself.__\n-c\n+C\n ost%7D, Dr\n",
            "lines": "52"
        },
        {
            "label": "2025-10-25_16-31-41",
            "content": "@@ -753,17 +753,16 @@\n  f%22Cost:\n- \n %7Bself.__\n",
            "lines": "52"
        },
        {
            "label": "2025-10-25_16-31-54",
            "content": "@@ -776,17 +776,16 @@\n  Driver:\n- \n %7Bself.__\n@@ -803,17 +803,16 @@\n ssenger:\n- \n %7Bself.__\n",
            "lines": "52"
        },
        {
            "label": "2025-10-25_16-32-05",
            "content": "@@ -705,87 +705,8 @@\n ver%0A\n-    def setPass(self, passenger: Person):%0A        self.__passenger = passenger%0A\n     \n@@ -1223,23 +1223,20 @@\n %5B0%5D == %22\n-setPass\n+init\n %22:%0A     \n@@ -1246,42 +1246,27 @@\n     \n-passenger = Person(args%5B1%5D, args%5B2\n+amount = int(args%5B1\n %5D)%0A \n@@ -1287,25 +1287,19 @@\n oca.\n-setPass(passenger\n+init(amount\n )%0A  \n",
            "lines": "52"
        },
        {
            "label": "2025-10-25_16-33-33",
            "content": "@@ -784,63 +784,8 @@\n ger%0A\n-    def drive(self, km: int):%0A        self.__cost = km%0A\n     \n@@ -1599,18 +1599,22 @@\n         \n-km\n+amount\n  = int(a\n@@ -1650,10 +1650,14 @@\n ive(\n-km\n+amount\n )%0A  \n",
            "lines": "54"
        },
        {
            "label": "2025-10-25_16-35-47",
            "content": "@@ -839,83 +839,8 @@\n  km%0A\n-    def leavePass(self):%0A        self.__passenger.getMoney() - self.__cost%0A\n     \n",
            "lines": "56"
        },
        {
            "label": "2025-10-25_16-38-32",
            "content": "@@ -914,40 +914,8 @@\n ost%0A\n-        print(self.__passenger)%0A\n     \n",
            "lines": "58"
        },
        {
            "label": "2025-10-25_16-39-15",
            "content": "@@ -924,17 +924,16 @@\n   print(\n-%7B\n self.__p\n@@ -944,19 +944,8 @@\n nger\n-%7D + %22 left%22\n )%0A  \n",
            "lines": "59"
        },
        {
            "label": "2025-10-25_16-39-45",
            "content": "@@ -871,19 +871,8 @@\n     \n- newMoney =\n  sel\n@@ -910,17 +910,16 @@\n .__cost%0A\n-%0A\n         \n@@ -924,18 +924,16 @@\n   print(\n-f%22\n %7Bself.__\n@@ -942,16 +942,20 @@\n ssenger%7D\n+ + %22\n  left%22)%0A\n",
            "lines": "59"
        },
        {
            "label": "2025-10-25_16-45-07",
            "content": "@@ -1633,25 +1633,22 @@\n  motoca.\n-leavePass\n+remove\n ()%0A     \n",
            "lines": "60"
        },
        {
            "label": "2025-10-25_16-45-38",
            "content": "@@ -221,73 +221,8 @@\n ey)%0A\n-    def setMoney(self, value: int):%0A        self.__money = value%0A\n     \n@@ -925,51 +925,8 @@\n ost%0A\n-        self.__passenger.setMoney(newMoney)\n %0A   \n",
            "lines": "60"
        },
        {
            "label": "2025-10-25_16-48-17",
            "content": "@@ -933,25 +933,24 @@\n         \n-moneyPass\n+newMoney\n  = self.\n@@ -1024,80 +1024,17 @@\n ney(\n-moneyPass)%0A        moneyDriver = self.__driver.getMoney() += self.__cost\n+newMoney)\n %0A   \n",
            "lines": "62"
        },
        {
            "label": "2025-10-25_16-49-52",
            "content": "@@ -1080,16 +1080,17 @@\n oney() +\n+=\n  self.__\n",
            "lines": "63"
        },
        {
            "label": "2025-10-25_16-49-58",
            "content": "@@ -1093,17 +1093,16 @@\n .__cost%0A\n-%0A\n         \n@@ -1139,64 +1139,8 @@\n t%22)%0A\n-        self.__passenger = None%0A        self.__cost = 0%0A\n     \n",
            "lines": "63"
        },
        {
            "label": "2025-10-25_16-51-00",
            "content": "@@ -1097,51 +1097,8 @@\n ost%0A\n-        self.__driver.setMoney(moneyDriver)\n %0A   \n",
            "lines": "66"
        },
        {
            "label": "2025-10-25_16-52-00",
            "content": "@@ -929,49 +929,8 @@\n f):%0A\n-        if self.__passenger != None:%0A    \n     \n@@ -991,28 +991,24 @@\n ost%0A        \n-   \n- \n self.__passe\n@@ -1036,46 +1036,8 @@\n ss)%0A\n-        if self.__driver != None:%0A    \n     \n@@ -1089,28 +1089,24 @@\n self.__cost%0A\n-    \n         self\n",
            "lines": "66"
        },
        {
            "label": "2025-10-25_16-52-47",
            "content": "@@ -1224,39 +1224,38 @@\n Driver)%0A        \n-return \n+print(\n f%22%7Bself.__passen\n@@ -1264,16 +1264,17 @@\n r%7D left%22\n+)\n %0A       \n",
            "lines": "68"
        },
        {
            "label": "2025-10-25_16-52-57",
            "content": "@@ -1232,22 +1232,23 @@\n         \n-print(\n+return \n f%22%7Bself.\n@@ -1265,17 +1265,16 @@\n r%7D left%22\n-)\n %0A       \n",
            "lines": "68"
        },
        {
            "label": "2025-10-25_16-54-53",
            "content": "@@ -1969,20 +1969,16 @@\n = %22leave\n-Pass\n %22:%0A     \n",
            "lines": "68"
        },
        {
            "label": "2025-10-25_16-55-33",
            "content": "@@ -895,17 +895,16 @@\n .__cost \n-+\n = km%0A   \n",
            "lines": "68"
        },
        {
            "label": "2025-10-25_16-57-00",
            "content": "@@ -1229,126 +1229,8 @@\n er)%0A\n-        if self.__passenger.getMoney() %3C self.__cost:%0A            print(%22fail: Passenger does not have enough money%22)%0A\n     \n",
            "lines": "68"
        },
        {
            "label": "2025-10-25_16-59-22",
            "content": "@@ -1347,34 +1347,8 @@\n y%22)%0A\n-            moneyPass = 0%0A\n     \n",
            "lines": "70"
        },
        {
            "label": "2025-10-25_17-00-06",
            "content": "@@ -1359,35 +1359,17 @@\n     \n-self.__passenger.getMoney()\n+moneyPass\n  = 0\n",
            "lines": "71"
        },
        {
            "label": "2025-10-25_17-00-32",
            "content": "@@ -1343,34 +1343,35 @@\n money%22)%0A        \n-if\n+   \n  self.__passenge\n@@ -1387,31 +1387,9 @@\n y() \n-%3C 0:%0A            return\n+=\n  0%0A \n",
            "lines": "71"
        },
        {
            "label": "2025-10-25_17-01-31",
            "content": "@@ -1403,36 +1403,16 @@\n     \n-self.__passenger.getMoney(0)\n+return 0\n %0A   \n",
            "lines": "72"
        },
        {
            "label": "2025-10-25_17-02-09",
            "content": "@@ -1429,13 +1429,10 @@\n ney(\n-) = \n 0\n+)\n %0A   \n",
            "lines": "72"
        },
        {
            "label": "2025-10-25_17-02-22",
            "content": "@@ -1343,16 +1343,104 @@\n money%22)%0A\n+        if self.__passenger.getMoney() %3C 0:%0A            self.__passenger.getMoney() = 0%0A\n         \n",
            "lines": "72"
        },
        {
            "label": "2025-10-25_17-02-35",
            "content": "@@ -1347,49 +1347,8 @@\n y%22)%0A\n-            self.__passenger.setMoney(0)%0A\n     \n@@ -2126,16 +2126,114 @@\n ePass()%0A\n+        if args%5B0%5D == %22buy%22:%0A            amount = int(args%5B1%5D)%0A            motoca.buyTime(amount)%0A\n         \n@@ -2314,14 +2314,77 @@\n ive(km)%0A\n+        if args%5B0%5D == %22honk%22:%0A            print(motoca.honk())%0A\n main()\n",
            "lines": "70"
        },
        {
            "label": "2025-10-25_17-07-01",
            "content": "class Person:\n    def __init__(self, name: str, money: int):\n        self.__name = name\n        self.__money = money\n    def getName(self):\n        return self.__name\n    def getMoney(self):\n        return int(self.__money)\n    def setMoney(self, value: int):\n        self.__money = value\n    def __str__(self) -> str:\n        return f\"{self.__name}:{self.__money}\"\nclass Moto:\n    def __init__(self, cost: int, driver: Person, passenger: Person):\n        self.__cost = 0\n        self.__driver = None\n        self.__passenger = None\n    def getCost(self):\n        return self.__cost\n    def getDriver(self):\n        return self.__driver\n    def getPassenger(self):\n        return self.__passenger\n    def setDriver(self, driver: Person):\n            self.__driver = driver\n    def setPass(self, passenger: Person):\n        self.__passenger = passenger\n    def drive(self, km: int):\n        self.__cost += km\n    def leavePass(self):\n        if self.__passenger != None:\n            moneyPass = self.__passenger.getMoney() - self.__cost\n            self.__passenger.setMoney(moneyPass)\n        if self.__driver != None:\n            moneyDriver = self.__driver.getMoney() + self.__cost\n            self.__driver.setMoney(moneyDriver)\n        if self.__passenger.getMoney() < self.__cost:\n            print(\"fail: Passenger does not have enough money\")\n            self.__passenger.setMoney(0)\n        print(f\"{self.__passenger} left\")\n        self.__passenger = None\n        self.__cost = 0\n    def __str__(self) -> str:\n        return f\"Cost: {self.__cost}, Driver: {self.__driver}, Passenger: {self.__passenger}\"\ndef main():\n    motoca = Moto (0, \"\", \"\")\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n        if args[0] == \"end\":\n            break\n        if args[0] == \"show\":\n            print(motoca)\n        if args[0] == \"setDriver\":\n            driver = Person(args[1], args[2])\n            motoca.setDriver(driver)\n        if args[0] == \"setPass\":\n            passenger = Person(args[1], args[2])\n            motoca.setPass(passenger)\n        if args[0] == \"leavePass\":\n            motoca.leavePass()\n        if args[0] == \"drive\":\n            km = int(args[1])\n            motoca.drive(km)\nmain()",
            "lines": "66"
        }
    ]
}